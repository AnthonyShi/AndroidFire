apply plugin: 'com.android.application'
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 24
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "jaydenxiao.com.androidfire"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 4
        versionName "1.0.3"
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //apk命名
            android.applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        //这里修改apk文件名
//                        def fileName = "AndroidFire-${defaultConfig.versionCode}-${defaultConfig.versionName}-${releaseTime()}.apk"
//                        output.outputFile = new File(outputFile.parent, fileName)
//                    }
//                }
                variant.outputs.all {
                    def fileName = "AndroidFire-${defaultConfig.versionCode}-${defaultConfig.versionName}-${releaseTime()}.apk"
                    outputFileName = fileName
                }
            }
        }
        debug{
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
    }
    //设置虚拟机堆内存空间大小，避免在编译期间OOM
    dexOptions {
        preDexLibraries = false           //让它不要对Lib做preDexing
        //incremental true//开启incremental dexing,优化编译效率，这个功能android studio默认是关闭的。
        javaMaxHeapSize "4g"//增加java堆内存大小
    }
    //打包不检查
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api project(':library:photoPicker')//图片选择
    api project(':library:irecyclerview')//万能适配器和recyclerview
    api project(':library:oneKeyShareSDK')//分享
    api project(':library:jcvideoplayer')//视频播放
    api project(':library:selectordialog')//常用提示框


}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

